name: Python Wheel

on:
  workflow_dispatch:
  release:
    types: [published, edited]
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  release_windows_fast:
    name: Build ${{ matrix.os }} Py${{ matrix.python-version }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ['3.12', '3.13']
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install maturin

      - name: Build wheels with maturin
        run: |
          cd windows-capture-python
          maturin build --release --strip -i python --target x86_64-pc-windows-msvc

      - name: Upload all wheels
        uses: actions/upload-artifact@v4
        with:
          name: windows-capture-py-${{ matrix.python-version }}
          path: ./target/wheels/*.whl

      - name: Update GitHub Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.release.tag_name }}
          name: ${{ github.event.release.name }}
          draft: false
          prerelease: false
          files: |
            ./target/wheels/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
